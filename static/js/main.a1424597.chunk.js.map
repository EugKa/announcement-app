{"version":3,"sources":["components/Header/index.tsx","components/CardAnnouncement/index.tsx","components/CustomInput/index.tsx","components/CardDetails/index.tsx","store/hooks.ts","store/features/announcement-slice/index.ts","data.ts","pages/Form/index.tsx","pages/Main/index.tsx","pages/Details/index.tsx","App.tsx","store/index.ts","index.tsx"],"names":["Header","className","to","CardAnnouncement","data","handleDelete","handleSelect","id","title","Card","variant","CardContent","Typography","component","CardActions","Button","size","onClick","CustomInput","forwardRef","ref","onChange","value","label","error","props","TextField","message","helperText","CardDetails","startEditing","isEdit","titleValue","descriptionValue","setTitleValue","setDescriptionValue","description","dateAdded","e","target","useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","AnnouncementsData","moment","subtract","format","AnnouncementSlice","createSlice","name","reducers","createAnnouncement","state","action","push","payload","editAnnouncement","existingAnnouncement","find","item","deleteAnnouncement","newData","filter","extraReducers","builder","actions","selectAnnouncement","FormPage","useForm","register","handleSubmit","errors","formState","reset","dispatch","onSubmit","formData","Date","now","required","color","type","MainPage","useState","search","setSearch","navigate","useNavigate","visibleItem","length","toLocaleLowerCase","indexOf","Item","styled","Paper","textAlign","theme","palette","text","secondary","Box","sx","flexGrow","Grid","container","spacing","map","lg","md","sm","xs","DetailsPage","setIsEdit","useParams","getDataWithId","splitTitle","split","splitDescription","concatWords","concat","similarAnnouncements","some","word","match","RegExp","slice","App","path","element","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1424597.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport  './index.scss';\n\nexport const Header = () => {\n    return (\n        <header className=\"app-header\">\n            <ul className=\"app-header-list\">\n                <li className=\"app-header-list__item\">\n                    <NavLink to=\"/\" className=\"app-header-list__link\">\n                        Home\n                    </NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/Form\" className=\"app-header-list__link\">\n                        Form\n                    </NavLink>\n                </li>\n            </ul>\n        </header>\n    )\n}\n","import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { IAnnouncement } from '../../interface/announcement';\nimport './index.scss'\n\ninterface ICardAnnouncementProps {\n    data: IAnnouncement;\n    handleDelete: (id: number) => void;\n    handleSelect: (id: number) => void;\n}\n\nexport const CardAnnouncement = ( {data, handleDelete, handleSelect}: ICardAnnouncementProps) => {\n    const { id, title } = data;\n    return (\n        <Card variant=\"outlined\">\n            <CardContent>\n            <Typography variant=\"h5\" component=\"div\">\n                {title}\n            </Typography>\n            </CardContent>\n            <div className=\"btn-group\">\n                <CardActions>\n                    <Button size=\"small\" onClick={() => handleSelect(id)}>More info</Button>\n                </CardActions>\n                <CardActions>\n                    <Button size=\"small\" onClick={() => handleDelete(id)}>Delete</Button>\n                </CardActions>\n            </div>       \n        </Card>\n    );\n}","import React, { ChangeEvent, ForwardedRef, forwardRef } from 'react'\nimport {TextField} from '@mui/material';\nimport { FieldError } from \"react-hook-form\";\n\ninterface InputProps {\n    className?: string;\n    error?: FieldError;\n    variant?: string;\n    label?: string;\n    id?: string;\n    defaultValue?: string;\n    helperText?: string;\n    value?: string;\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\n\n}\n\nexport const CustomInput = forwardRef(({ onChange, value, className, label, error, ...props }: InputProps, ref: ForwardedRef<HTMLInputElement>) => {\n    return (\n        <TextField\n            value={value}\n            onChange={onChange}\n            {...props}\n            className={className}\n            ref={ref}\n            error={error ? true : false}\n            id={error ? \"outlined-error-helper-text\" : \"outlined-basic\"}\n            label={error ? error.message: label}\n            helperText={error ? \"Required field\" : \"\"}\n            variant=\"outlined\"\n        />\n    )\n})","import React, { ChangeEvent } from 'react'\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { IAnnouncement } from '../../interface/announcement';\nimport { CustomInput } from '..';\nimport './index.scss'\n\ninterface CardDetailsProps {\n    data: IAnnouncement;\n    isEdit: boolean;\n    startEditing: () => void;\n    titleValue: string;\n    setTitleValue: (value: string) => void;\n    descriptionValue: string;\n    setDescriptionValue: (value: string) => void;\n}\n\n\nexport const CardDetails = ({ \n    data, \n    startEditing, \n    isEdit, \n    titleValue, \n    descriptionValue, \n    setTitleValue, \n    setDescriptionValue\n}: CardDetailsProps) => {   \n    const { title, description, dateAdded } = data;\n\n    return (\n       <Card variant=\"outlined\">\n             <CardContent>\n             {!isEdit \n                     ? (\n                         <Typography variant=\"h5\" component=\"div\" className=\"card-details__typography\">\n                            {title}\n                         </Typography>\n                     )\n                     : (\n                        <CustomInput \n                            className=\"card-details__input\" \n                            value={titleValue}\n                            onChange={(e: ChangeEvent<HTMLInputElement>)=> setTitleValue(e.target.value)}\n                        />\n                     )\n             }\n             <Typography variant=\"body1\" component=\"div\" className=\"card-details__typography\">\n                 <strong>Description:</strong>\n                 {!isEdit \n                     ? (\n                         <span>{description}</span>\n                     )\n                     : (\n                         <CustomInput \n                            className=\"card-details__input\" \n                            value={descriptionValue} \n                            onChange={(e: ChangeEvent<HTMLInputElement>)=> setDescriptionValue(e.target.value)}\n                        />\n                     )\n                 }\n             </Typography>\n             <Typography variant=\"body1\" className=\"card-details__typography\">\n                 <strong>Date Added:</strong> {dateAdded}\n             </Typography>\n             </CardContent>\n             <CardActions>\n                 <Button size=\"small\" onClick={() => startEditing()}>\n                    Edit\n                 </Button>\n             </CardActions>     \n         </Card>\n    )\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './index'\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { createSlice } from '@reduxjs/toolkit'\nimport { DataAnno } from '../../../data';\nimport { IAnnouncement } from '../../../interface/announcement';\nimport type { RootState } from '../../index';\n\ninterface dataState {\n  AnnouncementsData: IAnnouncement[];\n}\n\nconst initialState: dataState = {\n  AnnouncementsData: DataAnno\n}\n\n\nexport const AnnouncementSlice = createSlice({\n    name: '@@Announcement',\n    initialState,\n    reducers: {\n      createAnnouncement: (state, action) => {\n        state.AnnouncementsData.push(action.payload)\n      },\n      editAnnouncement(state, action) {\n        const { id, title, description } = action.payload;\n        const existingAnnouncement = state.AnnouncementsData.find((item) => item.id === id);\n        if (existingAnnouncement) {\n          existingAnnouncement.title = title;\n          existingAnnouncement.description = description;\n        }\n        \n      },\n      deleteAnnouncement(state, action) {\n        const newData = state.AnnouncementsData.filter(item => item.id !== action.payload)\n        state.AnnouncementsData = newData\n      },\n    },\n    extraReducers: (builder) => {\n      \n    }\n})\n\nexport const { createAnnouncement, editAnnouncement, deleteAnnouncement } = AnnouncementSlice.actions\n  \nexport const selectAnnouncement = (state: RootState) => state.AnnouncementSlice.AnnouncementsData;\nexport default AnnouncementSlice.reducer;\n","import moment from 'moment';\n\nexport const DataAnno = [\n    {\n        id: 1, \n        title: 'Volkswagen Passat B7 highline 2011',\n        description: 'Автомобиль очень мощный и экономный. Все подробности по телефону....',\n        dateAdded: moment().subtract(10, 'days').format(\"DD/MM/YYYY\"),\n\n    },\n    {\n        id: 2, \n        title: 'Mercedes-Benz Vito 110 2000', \n        description: 'Авто в робочому стані. Груз-пас.Документи також офіційні гру-пас!!! Всі дефекти видно на фото. Деталі за телефоном', \n        dateAdded: moment().subtract(30, 'days').format(\"DD/MM/YYYY\"),\n\n    },\n    {\n        id: 3, \n        title: 'Peugeot 308 2014', \n        description: 'description 3', \n        dateAdded: moment().subtract(5, 'days').format(\"DD/MM/YYYY\"),\n\n    },\n    {\n        id: 4, \n        title: 'Volkswagen Passat B6 R LINE 2010', \n        description: 'Original Passat b6 SPECIAL R-LINE - - День як пригнаний та Повністю Розмитнений - - Дійсно ексклюзивний автомобіль , який вартує уваги - - Стан як у нового', \n        dateAdded: moment().subtract(4, 'days').format(\"DD/MM/YYYY\"),\n\n    },\n    {\n        id: 5, \n        title: 'title 5', \n        description: 'description 5', \n        dateAdded: moment().subtract(1, 'days').format(\"DD/MM/YYYY\"),\n\n    },\n    {\n        id: 6, \n        title: 'title 6', \n        description: 'description 6', \n        dateAdded: moment().subtract(8, 'days').format(\"DD/MM/YYYY\"),\n\n    },\n]","import React from 'react'\nimport { Button, Card } from '@mui/material';\nimport { useForm } from 'react-hook-form';\nimport { useAppDispatch } from '../../store/hooks';\nimport { CustomInput } from '../../components';\nimport './index.scss'\nimport { createAnnouncement } from '../../store/features/announcement-slice';\nimport moment from 'moment';\n\n\ninterface FormPageState {\n    title: string;\n    description: string;\n}\nexport const FormPage = () => {\n    const { register, handleSubmit, formState: { errors }, reset } = useForm<FormPageState>();\n    const dispatch = useAppDispatch();\n\n    const onSubmit = (formData: FormPageState) => {\n        const { title, description } = formData;\n        dispatch(createAnnouncement({\n            id: Date.now(),\n            title,\n            description,\n            dateAdded: moment().format(\"DD/MM/YYYY\"),\n        }))\n        reset();\n    }\n\n    return (\n        <div className=\"form-page\">\n            <Card className=\"card\" variant=\"outlined\">\n                <form className=\"card__form\" onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"card__form-wrapper\">\n                        <CustomInput\n                            className=\"card__form-custom-input\"\n                            label=\"Announcement title\"\n                            {...register('title', { required: { value: true, message: 'Pleace enter announcement title'}})} \n                            error={errors.title!}\n                        />\n                        <CustomInput\n                            className=\"card__form-custom-input\" \n                            label=\"Announcement description\"\n                            {...register('description', { required: { value: true, message: 'Pleace enter announcement description'}})} \n                            error={errors.description!}\n                        />\n                        <Button className=\"card__form-btn\" variant=\"contained\" color=\"primary\" type=\"submit\">\n                            Create announcement\n                        </Button>\n                    </div>\n                </form>\n            </Card>\n        </div>\n    )\n}\n","import React, { ChangeEvent, useState } from 'react'\nimport { IAnnouncement } from '../../interface/announcement';\nimport { deleteAnnouncement, selectAnnouncement } from '../../store/features/announcement-slice';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { Grid, Paper, Box, Card } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { CardAnnouncement, CustomInput } from '../../components';\nimport { useNavigate } from \"react-router-dom\";\nimport './index.scss'\n\nexport const MainPage = () => {\n    const [search, setSearch] = useState('');\n    const data = useAppSelector(selectAnnouncement);\n    const dispatch = useAppDispatch();\n    let navigate = useNavigate();\n\n    const handleDelete = (id: number) => {\n        dispatch(deleteAnnouncement(id))\n    }\n\n\n    const handleSelect = (id: number, ) => {\n        navigate(`/announcement/${id}`);       \n    }\n\n    const handleSearh = (e: ChangeEvent<HTMLInputElement>) => {   \n        setSearch(e.target.value)\n    }\n\n    \n    const visibleItem = search.length === 0 \n        ? data\n        : data.filter(item => item.title.toLocaleLowerCase()\n            .indexOf(search.toLocaleLowerCase()) > -1);\n    \n    const Item = styled(Paper)(({ theme }) => ({\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    }));\n    \n    return (\n        <div className=\"main-page\">\n            <Card className=\"main-page-card\" variant=\"outlined\">\n                <CustomInput \n                    value={search} \n                    onChange={handleSearh} \n                    className=\"main-page-card__input\" \n                    label=\"Search announcements\"\n                />\n            </Card>\n            <Box sx={{ flexGrow: 1}}>\n                <Grid container  spacing={2}>\n                    {visibleItem.map((item:IAnnouncement) => {\n                        return <Grid item key={item.id}  lg={4} md={4} sm={6} xs={12}>\n                            <Item>\n                                <CardAnnouncement \n                                    data={item}\n                                    handleDelete={handleDelete}\n                                    handleSelect={handleSelect}\n                                />\n                            </Item>\n                    </Grid>\n                    })}\n                </Grid>          \n            </Box>\n            \n        </div>\n        \n    )\n}\n","import React, { useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { deleteAnnouncement, selectAnnouncement, editAnnouncement } from '../../store/features/announcement-slice';\nimport { CardAnnouncement, CardDetails } from '../../components';\nimport { Grid, Paper, Box } from '@mui/material';\nimport { IAnnouncement } from '../../interface/announcement';\nimport { styled } from '@mui/material/styles';\nimport { useNavigate } from \"react-router-dom\";\nimport './index.scss'\n\n\nexport const DetailsPage = () => {\n    const [isEdit, setIsEdit] = useState<boolean>(false);\n    const { id } = useParams();\n    const data = useAppSelector(selectAnnouncement);\n    const dispatch = useAppDispatch();\n    const navigate = useNavigate();\n    \n    const getDataWithId = data.filter(item => item.id === +id!);\n    const { title, description } = getDataWithId[0];\n    const [titleValue, setTitleValue] = useState(title)\n    const [descriptionValue, setDescriptionValue] = useState(description)\n\n    const splitTitle = title.split(' ');\n    const splitDescription = description.split(' ');\n    const concatWords = splitTitle.concat(splitDescription)\n    let similarAnnouncements = data.filter(item => item.id !== +id!)\n        .filter(item => { \n            return concatWords.some(word => \n                item.title.match(new RegExp(`\\\\b${word}\\\\b`)) || item.description.match(new RegExp(`\\\\b${word}\\\\b`)));\n    }).slice(0, 3);\n    \n\n    const handleDelete = (id: number) => {\n        dispatch(deleteAnnouncement(id))\n    }\n\n    const handleSelect = (id: number) => {\n        navigate(`/announcement/${id}`);       \n    }\n\n\n    const startEditing = () =>{\n        if (isEdit) {\n            setIsEdit(false)\n            dispatch(editAnnouncement({\n                id: +id!,\n                title: titleValue,\n                description: descriptionValue\n            }))\n        } else {\n            setIsEdit(true)\n        }\n    }\n\n    const Item = styled(Paper)(({ theme }) => ({\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    }));\n\n    return (\n        <div className=\"DetailsPage\">\n            <Box sx={{ flexGrow: 1}}>\n                <Grid container spacing={2}>\n                    <Grid item lg={12} md={12} sm={12} xs={12}>\n                        {getDataWithId.map(item => \n                            <CardDetails \n                                key={item.id} \n                                data={item} \n                                startEditing={startEditing}\n                                isEdit={isEdit}\n                                titleValue={titleValue}\n                                setTitleValue={setTitleValue}\n                                descriptionValue={descriptionValue}\n                                setDescriptionValue={setDescriptionValue}\n                            />\n                        )}\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2} className=\"similar-announcements\">\n                    <Grid item lg={12} md={12} sm={12} xs={12} >\n                        {similarAnnouncements.length === 0\n                            ? (\n                                <h1 className=\"similar-announcements__similar-title\">\n                                    No Similar Announcements\n                                </h1>\n                            )\n                            : (\n                                <h1 className=\"similar-announcements__similar-title\">\n                                    Similar Announcements\n                                </h1>\n                            )\n                        }  \n                    </Grid>\n                    {similarAnnouncements.map((item:IAnnouncement) => {\n                        return <Grid item key={item.id} lg={4} md={4} sm={6} xs={12}>\n                            <Item>\n                                <CardAnnouncement \n                                    data={item} \n                                    handleDelete={handleDelete}\n                                    handleSelect={handleSelect}\n                                />\n                            </Item>\n                        </Grid>\n                    })}\n                </Grid>\n            </Box>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom'\nimport { Header } from './components';\nimport { MainPage, FormPage, DetailsPage } from './pages';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Routes>\n          <Route path='/' element={<MainPage/>}/>\n          <Route path='/announcement/:id' element={<DetailsPage/>}/>\n          <Route path='/Form' element={<FormPage/>}/>\n        </Routes>    \n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\n\nimport AnnouncementSlice from './features/announcement-slice'\n\nexport const rootReducer = combineReducers({\n  AnnouncementSlice\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}